旗标和互斥体本为一体,相互协助：	
	旗标在计算机科学中是一个被很好理解的概念. 它的核心是, 一个旗标是一个单个整型值,
结合有一对函数, 典型地称为 P 和 V. 
	一个想进入临界区的进程将在相关旗标上调用 P;如果旗标的值大于零, 这个值递减 1 并且进程继续. 
	相反, 如果旗标的值是 0 ( 或更小 ), 进程必须等待直到别人释放旗标. 解锁一个旗标通过调用 V 完成; 
这个函数递增旗标的值, 并且, 如果需要, 唤醒等待的进程.

当旗标用作互斥 
	阻止多个进程同时在同一个临界区内运行 -- 它们的值将初始化为 1.
这样的旗标在任何给定时间只能由一个单个进程或者线程持有. 以这种模式使用的旗标有
时称为一个互斥锁,当然,  就是, "互斥"的缩写. 几乎所有在 Linux 内核中发现的旗标
都是用作互斥